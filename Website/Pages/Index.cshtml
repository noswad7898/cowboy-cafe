@page
@using CowboyCafe.Data.Entrees;
@using CowboyCafe.Data.Sides;
@using CowboyCafe.Data.Enums;
@using CowboyCafe.Data.Drinks;
@model IndexModel
@{
    ViewData["Title"] = "Index";
}
<!--
    Author: Dawson Field
    File: Index.cshtml
    About: The home page of the website, Shows wwelcome message and lists menu items, prices and calories. organized by catrgory.
-->
<h1>Cowboy Cafe</h1>
<p>
    We at Cowboy Cafe are proud to bring you authentic trail meals from the American West.
    Shake off the dust on your boots and sake your thirst with one of our old-fashioned hand-jerked sodas.
    Dip your Pan de Campo into a bowl of beans. Or conquer the the mighty Texas Triple Burger! You’ve had a hard ride - so take it easy with us.
</p>
<!--Displays all controls for search and filtering-->
<form id="search-logic" method="get">
    <div id="search">
        <input type="text" name="SearchTerms" value="@Model.SearchTerms" />
        <input type="submit" value="Search">
    </div>
    <div id="filters">

        <h4>Types</h4>
        <label>
            <input type="checkbox" name="Types" value="@Model.Types.Contains("Entree")"/>
            Entree
        </label>
        <label>
            <input type="checkbox" name="Types" value="@Model.Types.Contains("Side")" />
            Side
        </label>
        <label>
            <input type="checkbox" name="Types" value="@Model.Types.Contains("Drink")" />
            Drink
        </label>

        <h4>Calories</h4>
        <div>
            Between
            <input name="CalMin" type="number" min="0" max="1000" step="1" placeholder="min" value="@Model.CaloriesMin"/>
            and
            <input name="CalMax" type="number" min="0" max="1000" step="1" placeholder="min" value="@Model.CaloriesMax" />
        </div>

        <h4>Price</h4>
        <div>
            Between
            <input name="PriceMin" type="number" min="0" max="10" step=".01" placeholder="min" value="@Model.PriceMin"/>
            and
            <input name="CalMax" type="number" min="0" max="10" step=".01" placeholder="min" value="@Model.PriceMax"/>
        </div>

    </div>
    <!--Displays results of search and filtering-->
    <div id="results">
        <h1>Search Results</h1>
        <ul class="item-list">
            @foreach (IOrderItem item in @Model.Items)
            {
                if (item is Entree)
                {
                    <li>
                        <div class="details">
                            <h3 class="name">@item</h3>
                            <div class="price">@item.Price</div>
                            <div class="calories">@item.Calories</div>
                        </div>
                    </li>
                }
                if (item is Side)
                {
                    {
                        <li>
                            <div class="details">
                                <h3 class="name">@item</h3>
                                <div class="price">@item.Price</div>
                                <div class="calories">@item.Calories</div>
                            </div>
                        </li>
                    }
                }
                if (item is Drink)
                {
                    {
                        <li>
                            <div class="details">
                                <h3 class="name">@item</h3>
                                <div class="price">@item.Price</div>
                                <div class="calories">@item.Calories</div>
                            </div>
                        </li>
                    }
                }

            }
        </ul>
    </div>
</form>
<!--Displays Entrees category and all entree items with details below it-->
<h2>Entrees</h2>
<div class="menu-item">
    @{
        string entreesString = null;
        var entrees = Menu.Entrees();
        foreach (Entree item in entrees)
        {
            entreesString += item.ToString();
            entreesString += "  Price $";
            entreesString += String.Format("{0:C}", item.Price.ToString());
            entreesString += ", Calories ";
            entreesString += item.Calories;
            entreesString += ". ";

        }
    }
    @entreesString
</div>
<!--Displays sides category and all side items with details below it-->
<h2>Sides</h2>
<div class="menu-item">
    @{
        string sidesString = null;
        var sides = Menu.Sides();
        foreach (Side item in sides)
        {
            item.Size = Size.Small;
            {
                sidesString += item.ToString();
                sidesString += "  Price $";
                sidesString += String.Format("{0:C}", item.Price.ToString());
                sidesString += ", Calories ";
                sidesString += item.Calories;
                sidesString += ". ";
            }
            item.Size = Size.Medium;
            {
                sidesString += item.ToString();
                sidesString += "  Price $";
                sidesString += String.Format("{0:C}", item.Price.ToString());
                sidesString += ", Calories ";
                sidesString += item.Calories;
                sidesString += ". ";
            }
            item.Size = Size.Large;
            {
                sidesString += item.ToString();
                sidesString += "  Price $";
                sidesString += String.Format("{0:C}", item.Price.ToString());
                sidesString += ", Calories ";
                sidesString += item.Calories;
                sidesString += ". ";
            }
        }
    }
    @sidesString
</div>
<!--Displays drinks category and all drink items with details below it-->
<h2>Drinks</h2>
<div class="menu-item">
    @{
        string drinksString = null;
        var drinks = Menu.Drinks();
        foreach (Drink item in drinks)
        {
            item.Size = Size.Small;
            {
                drinksString += item.ToString();
                drinksString += "  Price $";
                drinksString += String.Format("{0:C}", item.Price.ToString());
                drinksString += ", Calories ";
                drinksString += item.Calories;
                drinksString += ". ";
            }
            item.Size = Size.Medium;
            {
                drinksString += item.ToString();
                drinksString += "  Price $";
                drinksString += String.Format("{0:C}", item.Price.ToString());
                drinksString += ", Calories ";
                drinksString += item.Calories;
                drinksString += ". ";
            }
            item.Size = Size.Large;
            {
                drinksString += item.ToString();
                drinksString += "  Price $";
                drinksString += String.Format("{0:C}", item.Price.ToString());
                drinksString += ", Calories ";
                drinksString += item.Calories;
                drinksString += ". ";
            }
        }
    }
    @drinksString
</div>
<h2>Jerked Soda Flavors</h2>
<div>
    @{
        string flavorString = null;
        flavorString += "Cream Soda \n";
        flavorString += "Orange Soda \n";
        flavorString += "Sarsparilla \n";
        flavorString += "Birch Beer \n";
        flavorString += "Root Beer \n";
    }
    @flavorString
</div>
